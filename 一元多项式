#include <iostream>

using namespace std;
typedef struct Node{
    int coef;
    int exp;
    Node *next;
}List;
void mu(List *&pp,List *qq){
    List *q,*p,*q2;
    q=qq;
    p=pp;
    List *p2=pp;
    while(p!=nullptr&&q!=nullptr){

        if(p->exp>q->exp){
            if(p==pp){
                pp=q;
                q=q->next;
                pp->next=p;
                p2=pp;
            }
            else{
                p2->next=q;
                p2=q;
                q=q->next;
                p2->next=p;

            }
        }
        if(p->exp==q->exp){
            p->coef=p->coef+q->coef;
            p2=p;
            p=p->next;
			q2=q;
            q=q->next;
			//delete[] q2;
        }
        if(p->exp<q->exp){
            p2=p;
            p=p->next;
        }
     
      }
	 if(q!=nullptr){
        p2->next=q;
    }
}
void CreatListm(List *&L){
    List *p,*q;
	L=new List;
	cout<<"输入a和x"<<endl;
	cin>>L->coef>>L->exp;
	L->next=nullptr;
	p=L;
	q=L;
    while(true){
        int a,x;
        cout<<"输入a和x"<<endl;
        cin>>a>>x;
        if(a==0)
            break;
        p=new List;
		p->next=nullptr;
            p->coef=a;
            p->exp=x;
            q->next=p;
            q=p;
    }
    
}
void DispList(List *L){
    List *p=L;
    while(p!=nullptr){
        cout<<p->coef<<"x"<<p->exp<<"  ";
        p=p->next;
    }
	cout<<endl;
}
int main()
{
    List *p,*q;
    CreatListm(p);
    DispList(p);
    CreatListm(q);
    DispList(q);
    mu(p,q);
    DispList(q);
    return 0;
}
